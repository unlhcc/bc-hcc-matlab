<%-
cores = bc_num_cores.blank? ? 1 : bc_num_cores.to_i
mem = bc_memory.blank? ? 1 : bc_memory.to_i
nodes = bc_num_slots.blank? ? 1 : bc_num_slots.to_i
image = case matlab_version.split(':')[1]
        when "el7"
          "/work/HCC/SINGULARITY/IMAGES/xfce_el7.sif"
        when "el8"
          "/work/HCC/SINGULARITY/IMAGES/xfce_el8.sif"
        end

%>
---
batch_connect:
  template: vnc
  set_host: "host=$(hostname)"
  websockify_cmd: '/usr/bin/websockify'
  script_wrapper: |
    export WORK=${HOME/#\/home/\/work}
    export COMMON=${HOME/#\/home/\/common}
    export SINGULARITY_CACHEDIR=${WORK}/.singularity
    export REGISTRY="hcc-docker-registry.unl.edu"
    cat << "CTRSCRIPT" > container.sh
    export PATH="${PATH}:/opt/TurboVNC/bin:/util/opt/bin"
    export XFCE_ROOT="/"
    touch $HOME/.cache/sessions/xfce4-session-`hostname`:1
    %s
    CTRSCRIPT
    # https://github.com/hpcng/singularity/issues/5185
    cat << "BASE" > /tmp/99-base.sh
    if [ -z "${LD_LIBRARY_PATH}" ]; then
      LD_LIBRARY_PATH="/.singularity.d/libs"
    else
      LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/.singularity.d/libs"
    fi
    export LD_LIBRARY_PATH
    export PS1="[\u@\h. \W]\$ "
    BASE
    chmod +x /tmp/99-base.sh
    export SINGULARITY_BINDPATH="/home,/work,/common,/util,/media,/mnt,/srv,/var/run,/run,/tmp/99-base.sh:/.singularity.d/env/99-base.sh:ro"
    singularity exec -B ${TMPDIR}:/tmp <%= image %> /bin/bash container.sh

script:
  # Slurm option is mem, memory is passed from the form
  copy_environment: true
  email: ["<%= bc_email_address.strip %>"]
  native:
    - "--qos"
    - "<%= qos_type %>"
    - "--mem"
    - "<%= mem %>GB"
    - "--licenses"
    - "common"
    - "--ntasks-per-node"
    - "<%= cores %>"
    - "--nodes"
    - "<%= nodes %>"
    - "--constraint"
    - "<%= bc_constraint.strip %>"
    - "--gres"
    - "<%= bc_gres.strip %>"
    - "--reservation"
    - "<%= bc_reservation.strip %>"
